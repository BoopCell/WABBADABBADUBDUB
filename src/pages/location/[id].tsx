import { Location, Character } from "@types";
import Image from "next/image";
import { GetServerSideProps } from "next";
import { useRouter } from "next/router";
import Head from "next/head";
import Header from "@components/Header/Header";

const Location = ({
  locationData,
  characters,
}: {
  locationData: Location;
  characters: Character[];
}): JSX.Element => {
  const router = useRouter();
  return (
    <>
      <Head>
        <title>Rick & Morty</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Header />
      <h1>{locationData.name}</h1>
      {locationData.dimension !== "unknown" ? (
        <h3>{locationData.dimension}</h3>
      ) : null}

      {characters.map((character) => (
        <li key={character.id}>
          <h4>{character.name}</h4>
          <Image
            alt={character.image}
            src={character.image}
            width={50}
            height={50}
          />
        </li>
      ))}
      <button
        type="button"
        title="Go back"
        role="link"
        onClick={() => router.back()}
      >
        Back
      </button>
    </>
  );
};

export const getServerSideProps: GetServerSideProps<{
  locationData: Location;
  characters: Character[];
}> = async (context) => {
  const res = await fetch(
    `https://rickandmortyapi.com/api/location/${context.params?.id}`
  );
  /* const res = await fetch("https://rickandmortyapi.com/api/location");
  const res = await fetch("https://rickandmortyapi.com/api/episode"); */
  const locationData: Location = await res.json();

  const { residents } = locationData;
  const characters = await Promise.all(
    residents.map(async (resident) => {
      const res = await fetch(
        `https://rickandmortyapi.com/api/character/${resident.slice(-2)}`
      );
      const character: Character = await res.json();
      return character;
    })
  );
  return { props: { locationData, characters } };
};

export default Location;
